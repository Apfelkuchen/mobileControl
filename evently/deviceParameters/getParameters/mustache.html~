<div data-role="collapsible" data-collapsed="false">
<h3>Parameters</h3>
	<form id="newparameters" action="new.html" method="post">
	<div data-role="fieldcontain">
		   	{{#parameters}}
		   	
		   	{{#voltage}}
			  <label for="{{parameter}}"> DAC Voltage [V]: </label>
  			  <input type="number" name="{{devicename}}_{{subdevicename}}_{{parameter}}" id="{{parameter}}" value="{{value}}" min="0" max="5" step="0.1" data-highlight="true" /> <br>
  			{{/voltage}}
  			
		   	{{^voltage}}
				<label for="{{parameter}}">{{ parameter }}:</label>  
				<input type="text" name="{{devicename}}_{{subdevicename}}_{{parameter}}" id="{{parameter}}" value="{{value}}" />
			{{/voltage}}
			
			{{/parameters}}
	</div>
<input type="submit" value="submit">
<div id="saved"></div>

</form>
<!--the \{\{#parameter\}\} is an helpful feature of mustache: if parameter is a list it iterates over all items in the list-->
<!--if its a single word, it handles like: if parameters, i.e. it only shows the content in \{\{#parameters\}\}\{\{/parameters\}\	} if parameters exist-->
  <script type="text/javascript" charset="utf-8">
	$("form#newparameters").submit(function() {
		
		var postDoc = {{{doc}}};
	  	{{#parameters}} 
	  	
	  	if($("input[name=__{{parameter}}]")) {
	  		postDoc['{{parameter}}'] = $("input[name=__{{parameter}}]").val();
	  	}
		{{#subdevicename}} 
		// following part is for the type of value, is it a string (function: sin), or an int (value of data)
		if(isNaN(parseFloat($("input[name={{devicename}}_{{subdevicename}}_{{parameter}}]").val()))) {
				postDoc['{{devicename}}']['{{subdevicename}}']['{{parameter}}'] = $("input[name={{devicename}}_{{subdevicename}}_{{parameter}}]").val();
			}
			else {
				postDoc['{{devicename}}']['{{subdevicename}}']['{{parameter}}'] = parseFloat($("input[name={{devicename}}_{{subdevicename}}_{{parameter}}]").val());
				$.log(postDoc);
		}
		{{/subdevicename}}
	  	{{/parameters}}
	  	$.couch.db('{{databasename}}').saveDoc(postDoc, {
        	success : function(resp) {
          		$("#saved").text("Saved _rev: "+resp.rev).fadeIn(500).fadeOut(2000);
				setTimeout(function() {  
          			$("#deviceParameters").trigger("getParameters",["{{controldevicename}}","{{databasename}}","{{devicename2}}","{{subdevicename2}}"]);
          		}, 2400 );
          		// this method only updates if the couchapp changed the parameters, better: use  $.couch.db(db).changes(); function, but I don't figured out how to implement filters in jQuery .changes()	
        	},
        	error : function(data) {
        		$("#saved")
        		.text("You are not authorized to do this, please log in")
        		.css("color", "red")
        		.fadeIn(500);	
        	}
      	});
	  return false;
	  });
  </script>
